name: CI
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
env:
  cache_nonce: 0 # Allows for easily busting actions/cache caches
  nim_version: v1.6.14
jobs:
  build:
    strategy:
      matrix:
        include:
          - os: linux
            cpu: amd64
            builder: ubuntu-latest
            shell: bash --noprofile --norc -e -o pipefail
            tests: all
          - os: macos
            builder: macos-latest
            shell: bash --noprofile --norc -e -o pipefail
            tests: all
          - os: windows
            builder: windows-latest
            shell: msys2
            tests: part1
          - os: windows
            builder: windows-latest
            shell: msys2
            tests: part2

    defaults:
      run:
        shell: ${{ matrix.shell }} {0}

    name: '${{ matrix.os }}-${{ matrix.cpu }} (Nim ${{ matrix.branch }})'
    runs-on: ${{ matrix.builder }}
    timeout-minutes: 80
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Nimbus Build System
        uses: ./.github/actions/nimbus-build-system
        with:
          os: ${{ matrix.os }}
          shell: ${{ matrix.shell }}
          nim_version: ${{ env.nim_version }}

      - name: Run test part 1
        if: matrix.tests == 'part1' || matrix.tests == 'all'
        run: echo "part1"

      - name: Run test part 2
        if: matrix.tests == 'part2' || matrix.tests == 'all'
        run: echo "part2"

      # - name: Unit tests
      #   run: make -j${ncpu} test

      # # workaround for https://github.com/NomicFoundation/hardhat/issues/3877
      # - name: Setup Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #    node-version: 18.15

      # - name: Start Ethereum node with Codex contracts
      #   working-directory: vendor/codex-contracts-eth
      #   env:
      #     MSYS2_PATH_TYPE: inherit
      #   run: |
      #     npm install
      #     npm start &

      # - name: Contract tests
      #   run: make -j${ncpu} testContracts

      # - name: Integration tests
      #   run: make -j${ncpu} testIntegration

  # coverage:
  #   continue-on-error: true
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: recursive

  #     - name: Setup Nimbus Build System
  #       uses: ./.github/actions/nimbus-build-system
  #       with:
  #         os: linux
  #         nim_version: ${{ env.nim_version }}

  #     - name: Generate coverage data
  #       run: make -j${ncpu} coverage
  #       shell: bash

  #     - name: Upload coverage data to Codecov
  #       uses: codecov/codecov-action@v3
  #       with:
  #         directory: ./coverage/
  #         fail_ci_if_error: true
  #         files: ./coverage/coverage.f.info
  #         flags: unittests
  #         name: codecov-umbrella
  #         verbose: true
